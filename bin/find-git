#!/usr/bin/env bash

set -euo pipefail

usage() {
  cat <<EOF
usage: find-git [<options>] [--] <dir> <command>

Execute <command> in each git directory (one that contains a .git directory)
under <dir>.

Options:
    -h, --help
        Show this help message and exit.

Examples:
    Execute "git status" in each git directory under the current directory:

        $ find-git . git status
EOF
}

while (( $# )); do
  case "$1" in
    -h|--help)
      usage
      exit
      ;;
    --)
      shift
      break
      ;;
    -*)
      printf "error: invalid option: %s\n" "$1" >&2
      exit 1
      ;;
    *)
      break
      ;;
  esac

  shift
done

if (( $# < 2 )); then
  usage
  exit 1
fi

dir="$1"
execdir_command=("${@:2}")

# `-execdir sh -c 'echo ...'` is like `-print`, but colored, and without trailing `/.git`
find -- "$dir" \
  -maxdepth 3 \
  -type d \
  -name '.git' \
  -execdir sh -c 'echo "$(tput setaf 4)$PWD$(tput sgr0)"' \; \
  -execdir sh -c "${execdir_command[*]}" \;
