#!/usr/bin/env bash

set -euo pipefail

usage() {
  cat <<EOF
usage: find-git [<options>] [--] <dir> <command>

Execute <command> in each git work tree under <dir>.

Options:
    -h, --help
        Show this help message and exit.

    -q, --quiet
        Do not print each directory before running <command>.

Examples:
    $ find-git . git status
    /path/to/repo1
    (output of git status in repo1)
    /path/to/repo2
    (output of git status in repo2)

    $ find-git -q . git status
    (output of git status in repo1)
    (output of git status in repo2)
EOF
}

# Like `-print`, but colored, and without the trailing `/.git`
execdir_colored_pwd="\
  -execdir tput setaf 4 ; \
  -execdir pwd ; \
  -execdir tput sgr0 ; \
"

while (( $# )); do
  case "$1" in
    -h|--help)
      usage
      exit
      ;;
    -q|--quiet)
      execdir_colored_pwd=
      ;;
    --)
      shift
      break
      ;;
    -*)
      printf "error: invalid option: %s\n" "$1" >&2
      exit 1
      ;;
    *)
      break
      ;;
  esac

  shift
done

if (( $# < 2 )); then
  usage
  exit 1
fi

dir="$1"
command=("${@:2}")

find -- "$dir" \
  -maxdepth 3 \
  -type d \
  -name .git \
  -execdir bash -c 'git rev-parse --is-inside-work-tree &>/dev/null' \; \
  $execdir_colored_pwd \
  -execdir bash -c "${command[*]}" \;
